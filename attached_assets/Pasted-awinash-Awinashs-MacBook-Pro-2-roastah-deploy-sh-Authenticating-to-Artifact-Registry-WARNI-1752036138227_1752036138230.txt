awinash@Awinashs-MacBook-Pro-2 roastah % ./deploy.sh
🔧 Authenticating to Artifact Registry...
WARNING: Your config file at [/Users/awinash/.docker/config.json] contains these credential helper entries:

{
  "credHelpers": {
    "asia.gcr.io": "gcloud",
    "eu.gcr.io": "gcloud",
    "gcr.io": "gcloud",
    "marketplace.gcr.io": "gcloud",
    "staging-k8s.gcr.io": "gcloud",
    "us-central1-docker.pkg.dev": "gcloud",
    "us-east4-docker.pkg.dev": "gcloud",
    "us.gcr.io": "gcloud"
  }
}
Adding credentials for: us-central1-docker.pkg.dev
gcloud credential helpers already registered correctly.
🏗️ Building Docker image...
[+] Building 5.1s (20/28)                                        docker:desktop-linux
 => [internal] load build definition from Dockerfile                             0.0s
 => => transferring dockerfile: 2.54kB                                           0.0s
 => WARN: FromPlatformFlagConstDisallowed: FROM --platform flag should not use   0.0s
 => WARN: FromPlatformFlagConstDisallowed: FROM --platform flag should not use   0.0s
 => [internal] load metadata for docker.io/library/node:18-alpine                0.9s
 => [auth] library/node:pull token for registry-1.docker.io                      0.0s
 => [internal] load .dockerignore                                                0.0s
 => => transferring context: 2.23kB                                              0.0s
 => [base 1/6] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3e  0.0s
 => [internal] load build context                                                0.0s
 => => transferring context: 1.74MB                                              0.0s
 => CACHED [production  2/14] RUN apk add --no-cache     dumb-init     && rm -r  0.0s
 => CACHED [production  3/14] RUN addgroup -g 1001 -S nodejs                     0.0s
 => CACHED [production  4/14] RUN adduser -S roastah -u 1001                     0.0s
 => CACHED [production  5/14] WORKDIR /app                                       0.0s
 => [production  6/14] COPY package*.json ./                                     0.0s
 => CACHED [base 2/6] RUN apk add --no-cache     python3     make     g++     g  0.0s
 => CACHED [base 3/6] WORKDIR /app                                               0.0s
 => [base 4/6] COPY package*.json ./                                             0.1s
 => [production  7/14] COPY pnpm-lock.yaml* ./                                   0.0s
 => [base 5/6] COPY pnpm-lock.yaml* ./                                           0.0s
 => ERROR [production  8/14] RUN npm install -g pnpm &&     pnpm install --prod  4.1s
 => [base 6/6] RUN npm install -g pnpm                                           2.9s
 => [backend-builder 1/3] COPY . .                                               0.0s
 => CANCELED [backend-builder 2/3] RUN pnpm install --frozen-lockfile            1.1s
------
 > [production  8/14] RUN npm install -g pnpm &&     pnpm install --prod --frozen-lockfile &&     pnpm prune --prod &&     pnpm store prune:
2.804 
2.804 added 1 package in 2s
2.804 
2.804 1 package is looking for funding
2.804   run `npm fund` for details
2.813 npm notice
2.813 npm notice New major version of npm available! 10.8.2 -> 11.4.2
2.813 npm notice Changelog: https://github.com/npm/cli/releases/tag/v11.4.2
2.813 npm notice To update run: npm install -g npm@11.4.2
2.813 npm notice
3.943  ERR_PNPM_OUTDATED_LOCKFILE  Cannot install with "frozen-lockfile" because pnpm-lock.yaml is not up to date with <ROOT>/package.json
3.943 
3.943 Note that in CI environments this setting is true by default. If you still need to run install in such cases, use "pnpm install --no-frozen-lockfile"
3.943 
3.943   Failure reason:
3.943   specifiers in the lockfile don't match specifiers in package.json:
3.943 * 14 dependencies were added: @testing-library/jest-dom@^6.6.3, @testing-library/react@^16.3.0, @testing-library/user-event@^14.6.1, @types/jest@^30.0.0, @types/supertest@^6.0.3, chokidar@^4.0.3, jest@^30.0.4, jest-environment-jsdom@^30.0.4, lodash@^4.17.21, msw@^2.10.3, node-cron@^4.2.0, supertest@^7.1.3, ts-jest@^29.4.0, whatwg-fetch@^3.6.20
3.943 
------

 2 warnings found (use docker --debug to expand):
 - FromPlatformFlagConstDisallowed: FROM --platform flag should not use constant value "linux/amd64" (line 57)
 - FromPlatformFlagConstDisallowed: FROM --platform flag should not use constant value "linux/amd64" (line 5)
Dockerfile:76
--------------------
  75 |     # Install only production dependencies and prune any dev dependencies
  76 | >>> RUN npm install -g pnpm && \
  77 | >>>     pnpm install --prod --frozen-lockfile && \
  78 | >>>     pnpm prune --prod && \
  79 | >>>     pnpm store prune
  80 |     
--------------------
ERROR: failed to solve: process "/bin/sh -c npm install -g pnpm &&     pnpm install --prod --frozen-lockfile &&     pnpm prune --prod &&     pnpm store prune" did not complete successfully: exit code: 1
awinash@Awinashs-MacBook-Pro-2 roastah % 